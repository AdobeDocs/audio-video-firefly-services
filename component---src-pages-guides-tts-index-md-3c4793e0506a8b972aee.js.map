{"version":3,"file":"component---src-pages-guides-tts-index-md-3c4793e0506a8b972aee.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/tts/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/audio-video-firefly-services/audio-video-firefly-services/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport AvartarPDF from \"../../../images/Avatar-Catalog.pdf\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"getting-started-with-text-to-speech-api\"\n    }}>{`Getting Started with Text to Speech API`}</h1>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`Text to Speech (TTS)`}</strong>{` API address the need for automated speech audio creation at scale. This guide shows you how to get started with using this asynchronous API for:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Generating an audio output via text input.`}</li>\n      <li parentName=\"ol\">{`Generating an audio output via a text file.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"api-features\"\n    }}>{`API Features`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Use a voice of your choice from a catalog of stock voices`}</li>\n      <li parentName=\"ol\">{`Choose from a wide variety of voices across genders, age groups and speaking styles`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <h3 {...{\n      \"id\": \"api-credentials\"\n    }}>{`API credentials`}</h3>\n    <p>{`The required credentials were provided as part of the private beta in the form of a `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`client_secret`}</inlineCode>{`. You will need them available to get started.`}</p>\n    <h3 {...{\n      \"id\": \"storage-solution\"\n    }}>{`Storage solution`}</h3>\n    <p>{`You will need to be able to use some type of user owned storage (ie: Amazon S3 buckets) for the video/audio and edited transcripts to be able to generate a presigned URL to supply as the video/audio file input for the APIs.`}</p>\n    <p>{`Some ways to achieve this are described below.`}</p>\n    <h4 {...{\n      \"id\": \"using-amazon-s3-buckets\"\n    }}>{`Using Amazon S3 buckets`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Login to your AWS account.`}</li>\n      <li parentName=\"ol\">{`Go to s3.`}</li>\n      <li parentName=\"ol\">{`Create a new bucket with some name (ex: `}<inlineCode parentName=\"li\">{`adobeapitesting`}</inlineCode>{`).`}</li>\n      <li parentName=\"ol\">{`Drag and drop the video/audio/text file you want to test in the bucket.`}</li>\n      <li parentName=\"ol\">{`Once the upload completes, select the file and go to `}<strong parentName=\"li\">{`Actions`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Select the `}<strong parentName=\"li\">{`Share with presigned url`}</strong>{` option and give the duration you want the presigned url to be valid.`}</li>\n      <li parentName=\"ol\">{`Copy the generated presigned url (it will also automatically be copied when you create it).`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"using-frameio-account\"\n    }}>{`Using Frame.io account`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Login to your Frame.io account`}</li>\n      <li parentName=\"ol\">{`Create a project (ie: `}<inlineCode parentName=\"li\">{`AdobeApiTesting`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Open the inspect view of the browser. (In Chrome, press f12 and go to the \"network\" tab).`}</li>\n      <li parentName=\"ol\">{`Drag and drop the video/audio/text file you want to test in the bucket.`}</li>\n      <li parentName=\"ol\">{`Select the file and click on download.`}</li>\n      <li parentName=\"ol\">{`In the \"network\" tab, you will see a `}<inlineCode parentName=\"li\">{`GET`}</inlineCode>{` call using a presigned url to download the file.`}</li>\n      <li parentName=\"ol\">{`Copy that url to use in your API testing.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"use-googles-direct-link-service\"\n    }}>{`Use Google's direct link service`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`You can use `}<a parentName=\"li\" {...{\n          \"href\": \"https://sites.google.com/site/gdocs2direct/?authuser=1&pli=1\"\n        }}>{`Google's direct link service`}</a>{` to generate downloadable public links for your files.`}</li>\n      <li parentName=\"ol\">{`Before generating, you'll need to make sure your file's visibility in your Google Drive is set to `}<strong parentName=\"li\">{`Anyone with the link`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`You can try the curl requests for the APIs directly from terminal.`}</li>\n    </ol>\n    <p>{`Optionally, you can use an http client like `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.postman.com/\"\n      }}>{`Postman`}</a>{` to try out the APIs.`}</p>\n    <h2 {...{\n      \"id\": \"api-walkthrough\"\n    }}>{`API Walkthrough`}</h2>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`There is a limit of 2 RPM for Avatar and TTS endpoints and x100 RPM for Get result API per user.`}</p>\n    <p>{`This endpoint enables you to generate an speech audio file. You can provide text or text file input via a presigned URL for generation.`}</p>\n    <h5 {...{\n      \"id\": \"step-1\"\n    }}>{`Step 1`}</h5>\n    <p>{`Ensure you have reference to a valid access token. See the `}<a parentName=\"p\" {...{\n        \"href\": \"#prerequisites\"\n      }}>{`Prerequisites`}</a>{`.`}</p>\n    <h5 {...{\n      \"id\": \"step-2-optional\"\n    }}>{`Step 2 (Optional)`}</h5>\n    <p>{`If you choose to use a text file to generate the audio - Upload the input text file to storage location and generate a presigned url to access the same (Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#prerequisites\"\n      }}>{`Prerequisites`}</a>{` section for more details).`}</p>\n    <h5 {...{\n      \"id\": \"step-3\"\n    }}>{`Step 3`}</h5>\n    <p>{`In the curl command below, update the `}<strong parentName=\"p\">{`Authorization`}</strong>{` with the bearer token in step 1, `}<strong parentName=\"p\">{`x-api-key`}</strong>{` as per the prerequisite, `}<strong parentName=\"p\">{`mediaType`}</strong>{` as per input type and url with the generated presigned url and run the curl.`}</p>\n    <p>{`Select the curl for `}<inlineCode parentName=\"p\">{`tts_curl_text`}</inlineCode>{` for text input or `}<inlineCode parentName=\"p\">{`tts_curl_text_file`}</inlineCode>{` for text file input.`}</p>\n    <p><inlineCode parentName=\"p\">{`voiceId`}</inlineCode>{` specifies the unique ID of the voice to be used for speech generation. Users should refer to the `}<a href={AvartarPDF} target=\"_blank\">{`Catalog`}</a>{` to select and retrieve the appropriate voiceId.`}</p>\n    <p><strong parentName=\"p\">{`tts_curl_text`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://audio-video-api.adobe.io/beta/generate-speech' \\\\\n-H 'Authorization: Bearer <token>' \\\\\n-H 'x-api-key: <client_id>' \\\\\n-H 'Content-Type: application/json' \\\\\n--data-raw '{\n    \"script\": {\n        \"source\": {\n            \"text\": \"Your text goes here\"\n        },\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice_id>\",\n    \"output\": {\n        \"mediaType\": \"audio/wav\"\n    }\n}'\n`}</code></pre>\n    <p><strong parentName=\"p\">{`tts_curl_text_file`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://audio-video-api.adobe.io/beta/generate-speech' \\\\\n-H 'Authorization: Bearer <token>' \\\\\n-H 'x-api-key: <client_id>' \\\\\n-H 'Content-Type: application/json' \\\\\n--data-raw '{\n    \"script\": {\n        \"source\": {\n            \"url\": \"<pre-signed url of text file>\"\n        },\n        \"mediaType\": \"text/plain\",\n        \"localeCode\": \"en-US\"\n    },\n    \"voiceId\": \"<voice_id>\",\n    \"output\": {\n        \"mediaType\": \"audio/wav\"\n    }\n}'\n`}</code></pre>\n    <h5 {...{\n      \"id\": \"step-4\"\n    }}>{`Step 4`}</h5>\n    <p>{`Check the `}<inlineCode parentName=\"p\">{`result_url`}</inlineCode>{` in the response and follow the steps in `}<a parentName=\"p\" {...{\n        \"href\": \"#get-result-api\"\n      }}>{`Get Result API`}</a>{` to get the final result.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"links\": {\n        \"cancel\": {\n            \"href\": \"<cancel_url>\"\n        },\n        \"result\": {\n            \"href\": \"<result_url>\"\n        }\n    }\n} \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"get-result-api\"\n    }}>{`GET Result API`}</h3>\n    <h5 {...{\n      \"id\": \"step-1-1\"\n    }}>{`Step 1`}</h5>\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`result_url`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Authorization`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`x-api-key`}</inlineCode>{` in the command below.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: The `}<inlineCode parentName=\"p\">{`result_url`}</inlineCode>{` was returned in the response of the TTS API call.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location '<result_url>' \\\\\n  -H 'Authorization: Bearer <token>' \\\\\n  -H 'x-api-key: <client_id>' \n`}</code></pre>\n    <p>{`When the job is complete , you will see the result for the operation.`}</p>\n    <h4 {...{\n      \"id\": \"sample-tts-api-response\"\n    }}>{`Sample TTS API response`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"status\": \"succeeded\",\n    \"url\": \"<pre-signed url of the result>\"\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`url`}</inlineCode>{` can be used to download the generated video for the input.`}</p>\n    <h3 {...{\n      \"id\": \"verifying-the-content-credentials-on-output\"\n    }}>{`Verifying the Content Credentials on output`}</h3>\n    <p>{`Introduces a content authentication initiative for AI-generated assets, addressing concerns around content legitimacy.`}</p>\n    <h5 {...{\n      \"id\": \"step-1-2\"\n    }}>{`Step 1`}</h5>\n    <p>{`Download the final output video/audio using the presigned url in the success response of GET Result API.`}</p>\n    <h5 {...{\n      \"id\": \"step-2\"\n    }}>{`Step 2`}</h5>\n    <p>{`Upload the file `}<a parentName=\"p\" {...{\n        \"href\": \"https://contentcredentials.org/verify\"\n      }}>{`https://contentcredentials.org/verify`}</a>{` to check the credentials.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","href","AvartarPDF","target","isMDXComponent"],"sourceRoot":""}